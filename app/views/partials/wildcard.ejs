<html lang="en"><head><meta charset="utf-8"><title>Welcome</title><meta name="theme-color" content="FF0000"><meta property="og:type" content="article"><meta name="twitter:card" content="summary"><meta property="og:title" content="Welcome"><meta name="twitter:title" content="Welcome">
<style>html,body,canvas{width: 100vw;height:100vh;overflow-y:hidden;overflow-x:hidden;margin:0;}</style></head><body><script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/threejs/r70/three.min.js"></script><script id="vert" type="x-shader/x-vertex">varying vec2 fragCoord;void main(){gl_Position=projectionMatrix*(modelViewMatrix*vec4(position,1));fragCoord=position.xy;}</script><script id="frag" type="x-shader/x-fragment">uniform float iGlobalTime;varying vec2 fragCoord;void main(){gl_FragColor=vec4(.5+.5*cos(iGlobalTime+(fragCoord*.3).xyx+vec3(0,2,4)),1.);}</script><script>
var scene = new THREE.Scene();
var camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.5, 1.5);
camera.position.set(0, 0, 1);
var renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.stencil = false;
renderer.depth = false;
renderer.premultipliedAlpha = false;
renderer.precision = "lowp";

uniforms = {
	iGlobalTime: { type: "f", value: 1.0 },
	iResolution: { type: "v2", value: new THREE.Vector2() },};
uniforms.iResolution.value.x = window.innerWidth;
uniforms.iResolution.value.y = window.innerHeight;
material = new THREE.ShaderMaterial({
	uniforms: uniforms,
	vertexShader: document.getElementById('vert').textContent,
	fragmentShader: document.getElementById('frag').textContent
});
var plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), material);
scene.add(plane);

startTime = Date.now();
function animate() {
	uniforms.iGlobalTime.value = (Date.now() - startTime) / 1000.;
	requestAnimationFrame(animate);
	renderer.render(scene, camera);
}
animate();

function onWindowResize() {
	camera.aspect = window.innerWidth / window.innerHeight;
	camera.updateProjectionMatrix();
	uniforms.iResolution.value.x = window.innerWidth;
	uniforms.iResolution.value.y = window.innerHeight;
	renderer.setSize(window.innerWidth, window.innerHeight);
}
window.addEventListener('resize', onWindowResize, false);

document.body.appendChild(renderer.domElement);
</script></body></html>