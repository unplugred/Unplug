<%- include('../partials/header',{title:"unplug",color:"#3B6EA5"}) %>
		<style>
			#browser {
				width: calc(100vw - 10px);
				height: calc(100vh - 29px);
			}

			.close {
				-webkit-app-region: no-drag;
			}

			#dragbar {
				-webkit-app-region: drag;
				-webkit-user-select: none;
				cursor: url("<%= assets %>/cursors/default.png") 0 0, default !important;
			}
		</style>
		<link rel=StyleSheet href="<%= assets %>/inception/browser.css" type="text/css" media=screen>
		<link rel="prefetch" href="<%= assets %>/window/closed.png" />
	</head>
	<body>
		<div id="browser">
			<div id="titletext">bulb</div>
			<div id="dragbar"></div>
			<div id="rainbow"></div>
			<div id="topbar"><button id="back" onclick="backk()" class="off"><div class="icon"></div></button><button id="front" onclick="frontt()" class="off"><div class="icon"></div></button><div class="insetborder1 input"><input class="insetborder2" id="input" spellcheck="false"></input></div><button id="go" onclick="changeurl()"><div class="icon"></div></button></div>
			<div class="insetborder1 innerbrowser"><iframe class="insetborder2" id="iframe" src="http://localhost:6660/bulb" onLoad="updateurl(this.contentWindow.location);"></iframe></div>
			<a class="close" href="javascript:void(0)" onclick="closee()"></a>
		</div>
		<script>
			var iframe = document.getElementById("iframe");
			var input = document.getElementById("input");
			var back = document.getElementById("back");
			var front = document.getElementById("front");
			var rainbow = document.getElementById("rainbow");
			var titletext = document.getElementById("titletext");
			var hostt = "https://         /";

			var historyy = [];
			var unhistory = [];
			var current = validate(iframe.src);
			input.value = hostt + current;
			prevvalue = current;
			rainbow.style.width = Math.ceil(Math.max(Math.min(input.value.length, hostt.length - 1) - 8, 0)*6.6) + "px";
			rainbow.style.backgroundPositionX = (Math.random()*100) + "%";

			function changeurl()
			{
				v = validate(input.value.substr(hostt.length));
				if(v != current)
				{
					historyy.push(current);
					current = v;
					unhistory = [];
					back.className = null;
					front.className = "off";
				}
				iframe.src = tourll(current);
			}

			function updateurl(urll)
			{
				document.title = iframe.contentDocument.title;
				titletext.innerHTML = iframe.contentDocument.title;

				urll = validate(urll);
				if(urll != current)
				{
					historyy.push(current);
					current = urll;
					unhistory = [];
					back.className = null;
					front.className = "off";
				}
				input.value = hostt + current;
			}

			function validate(v)
			{
				var r = singlevalid(v);
				while(r != v)
				{
					v = r;
					r = singlevalid(r);
				}
				return r;
			}

			function singlevalid(v)
			{
				v = String(v).replace(/\s/g,'');
				if(v.startsWith("http"))
				{
					var search = v.substr(8).search("/");
					if(search !== -1) v = v.substr(search + 9);
					else v = " ";
				}
				while(v.startsWith("/")) v = v.substr(1);
				if(v.startsWith("unplug")) v = "";
				if(v.startsWith("?")) v = "";
				if(v.startsWith("inception?")) v = "inception";
				return v;
			}

			function tourll(v)
			{
				if(v === "") return "/unplug";
				if(v.startsWith("inception")) return "/inception?" + Math.floor(Math.random()*10000);
				return "/" + v;
			}

			function backk()
			{
				unhistory.push(current);
				current = historyy.pop();
				input.value = hostt + current;
				iframe.src = tourll(current);
				if(historyy.length === 0)
					back.className = "off";
				front.className = null;
			}

			function frontt()
			{
				historyy.push(current);
				current = unhistory.pop();
				input.value = hostt + current;
				iframe.src = tourll(current);
				if(unhistory.length === 0)
					front.className = "off";
				back.className = null;
			}

			function closee()
			{
				let remota = require('electron').remote;
				let byewin = remota.getGlobal("byeWindow");
				byewin.loadURL("http://localhost:6660/bye?6660");
				byewin.show();
				remota.getCurrentWindow().close();
			}
			input.addEventListener('keydown', function(event)
			{
				if(event.which === 13) changeurl();
				else setTimeout(function() {
					if(input.value === prevvalue) return;
					if(input.value.length <= hostt.length)
					{
						input.value = hostt.substr(0, input.value.length);
						prevvalue = input.value;
						rainbow.style.width = Math.ceil(Math.max(Math.min(input.value.length, hostt.length - 1) - 8, 0)*6.6) + "px";
					}
					else if(input.value.startsWith(hostt))
						prevvalue = input.value;
					else
						input.value = prevvalue;
					rainbow.style.backgroundPositionX = (Math.random()*100) + "%";
				});
			});
		</script>
<%- include('../partials/footer') %>
